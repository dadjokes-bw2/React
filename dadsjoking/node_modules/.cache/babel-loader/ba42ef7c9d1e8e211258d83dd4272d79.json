{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bryan\\\\Documents\\\\GitHub\\\\DadJokes\\\\dadsjoking\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport thunk from \"redux-thunk\";\nimport App from './App';\nimport rootReducer from \"./reducers\"; // Custom redux logger!!\n\nconst logger = store => next => action => {\n  console.log(\"Prev State\", store.getState());\n  console.log(\"Action\", action);\n  next(action);\n  console.log(\"New State\", store.getState());\n};\n\nconst store = createStore(rootReducer, // compose multiple middleware flows together into one flow\ncompose( // our custom middleware\napplyMiddleware(thunk, logger), // redux dev tools middleware\nwindow.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f));\nReactDOM.render(React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}, React.createElement(Router, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n}))), document.getElementById(\"root\"));","map":{"version":3,"sources":["C:\\Users\\bryan\\Documents\\GitHub\\DadJokes\\dadsjoking\\src\\index.js"],"names":["React","ReactDOM","BrowserRouter","Router","createStore","applyMiddleware","compose","Provider","thunk","App","rootReducer","logger","store","next","action","console","log","getState","window","__REDUX_DEVTOOLS_EXTENSION__","f","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,aAAa,IAAIC,MAA1B,QAAwC,kBAAxC;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAO,sCAAP;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,WAAP,MAAwB,YAAxB,C,CAEA;;AACA,MAAMC,MAAM,GAAGC,KAAK,IAAIC,IAAI,IAAIC,MAAM,IAAI;AACxCC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BJ,KAAK,CAACK,QAAN,EAA1B;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,MAAtB;AAEAD,EAAAA,IAAI,CAACC,MAAD,CAAJ;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBJ,KAAK,CAACK,QAAN,EAAzB;AACD,CAPD;;AASA,MAAML,KAAK,GAAGR,WAAW,CACvBM,WADuB,EAEvB;AACAJ,OAAO,EACL;AACAD,eAAe,CAACG,KAAD,EAAQG,MAAR,CAFV,EAGL;AACAO,MAAM,CAACC,4BAAP,GACID,MAAM,CAACC,4BAAP,EADJ,GAEIC,CAAC,IAAIA,CANJ,CAHgB,CAAzB;AAaAnB,QAAQ,CAACoB,MAAT,CACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAET,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,CADF,EAMEU,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANF","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport thunk from \"redux-thunk\";\r\nimport App from './App'\r\nimport rootReducer from \"./reducers\";\r\n\r\n// Custom redux logger!!\r\nconst logger = store => next => action => {\r\n  console.log(\"Prev State\", store.getState());\r\n  console.log(\"Action\", action);\r\n\r\n  next(action);\r\n\r\n  console.log(\"New State\", store.getState());\r\n};\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  // compose multiple middleware flows together into one flow\r\n  compose(\r\n    // our custom middleware\r\n    applyMiddleware(thunk, logger),\r\n    // redux dev tools middleware\r\n    window.__REDUX_DEVTOOLS_EXTENSION__\r\n      ? window.__REDUX_DEVTOOLS_EXTENSION__()\r\n      : f => f\r\n  )\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"]},"metadata":{},"sourceType":"module"}
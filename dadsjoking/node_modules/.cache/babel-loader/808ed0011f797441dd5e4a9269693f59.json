{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\bryan\\\\Documents\\\\GitHub\\\\DadJokes\\\\dadsjoking\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { SIGN_UP, SIGN_UP_FAILED, SIGN_UP_SUCCESS, LOG_IN, LOG_IN_FAILED, LOG_IN_SUCCESS, GET_PUBLIC_JOKES, GET_PUBLIC_JOKES_FAILED, GET_PUBLIC_JOKES_SUCCESS } from '../actions/index';\nconst initialState = {\n  username: \"\",\n  password: \"\",\n  isLoggedIn: false,\n  isLoading: false,\n  errorMessage: null,\n  jokes: []\n};\nexport const accountReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SIGN_UP:\n      {\n        return _objectSpread({}, state, {\n          isLoading: true,\n          errorMessage: null\n        });\n      }\n\n    case SIGN_UP_FAILED:\n      {\n        return _objectSpread({}, state, {\n          errorMessage: action.payload,\n          isLoading: false\n        });\n      }\n\n    case SIGN_UP_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isLoading: false,\n          errorMessage: null\n        });\n      }\n\n    case LOG_IN:\n      {\n        return _objectSpread({}, state, {\n          isLoading: true,\n          errorMessage: null\n        });\n      }\n\n    case LOG_IN_FAILED:\n      {\n        return _objectSpread({}, state, {\n          isLoading: false,\n          errorMessage: action.payload\n        });\n      }\n\n    case LOG_IN_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isLoading: false,\n          errorMessage: null\n        });\n      }\n\n    default:\n      return state;\n  }\n};\nexport const getJokes = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_PUBLIC_JOKES:\n      {\n        return _objectSpread({}, state, {\n          isLoading: true,\n          errorMessage: null\n        });\n      }\n\n    case GET_PUBLIC_JOKES_FAILED:\n      {\n        return _objectSpread({}, state, {\n          isLoading: false,\n          errorMessage: action.payload\n        });\n      }\n\n    case GET_PUBLIC_JOKES_SUCCESS:\n      {\n        const newJokes = state.jokes.concat(action.payload);\n        console.log(newJokes);\n        return _objectSpread({}, state, {\n          jokes: newJokes,\n          isLoading: false,\n          errorMessage: null\n        });\n      }\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:\\Users\\bryan\\Documents\\GitHub\\DadJokes\\dadsjoking\\src\\reducers\\accountReducer.js"],"names":["SIGN_UP","SIGN_UP_FAILED","SIGN_UP_SUCCESS","LOG_IN","LOG_IN_FAILED","LOG_IN_SUCCESS","GET_PUBLIC_JOKES","GET_PUBLIC_JOKES_FAILED","GET_PUBLIC_JOKES_SUCCESS","initialState","username","password","isLoggedIn","isLoading","errorMessage","jokes","accountReducer","state","action","type","payload","getJokes","newJokes","concat","console","log"],"mappings":";AAAA,SACEA,OADF,EAEEC,cAFF,EAGEC,eAHF,EAIEC,MAJF,EAKEC,aALF,EAMEC,cANF,EAOEC,gBAPF,EAQEC,uBARF,EASEC,wBATF,QAUO,kBAVP;AAaA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,EADS;AAEnBC,EAAAA,QAAQ,EAAE,EAFS;AAGnBC,EAAAA,UAAU,EAAE,KAHO;AAInBC,EAAAA,SAAS,EAAE,KAJQ;AAKnBC,EAAAA,YAAY,EAAE,IALK;AAMnBC,EAAAA,KAAK,EAAE;AANY,CAArB;AASA,OAAO,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AAC9D,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKnB,OAAL;AAAc;AACZ,iCACKiB,KADL;AAEEJ,UAAAA,SAAS,EAAE,IAFb;AAGEC,UAAAA,YAAY,EAAE;AAHhB;AAKD;;AACD,SAAKb,cAAL;AAAqB;AACnB,iCACKgB,KADL;AAEEH,UAAAA,YAAY,EAAEI,MAAM,CAACE,OAFvB;AAGEP,UAAAA,SAAS,EAAE;AAHb;AAKD;;AACD,SAAKX,eAAL;AAAsB;AACpB,iCACKe,KADL;AAEEJ,UAAAA,SAAS,EAAE,KAFb;AAGEC,UAAAA,YAAY,EAAE;AAHhB;AAKD;;AACD,SAAKX,MAAL;AAAa;AACX,iCACKc,KADL;AAEEJ,UAAAA,SAAS,EAAE,IAFb;AAGEC,UAAAA,YAAY,EAAE;AAHhB;AAKD;;AACD,SAAKV,aAAL;AAAoB;AAClB,iCACKa,KADL;AAEEJ,UAAAA,SAAS,EAAE,KAFb;AAGEC,UAAAA,YAAY,EAAEI,MAAM,CAACE;AAHvB;AAKD;;AACD,SAAKf,cAAL;AAAqB;AACnB,iCACKY,KADL;AAEEJ,UAAAA,SAAS,EAAE,KAFb;AAGEC,UAAAA,YAAY,EAAE;AAHhB;AAKD;;AACD;AACE,aAAOG,KAAP;AA5CJ;AA8CD,CA/CM;AAiDP,OAAO,MAAMI,QAAQ,GAAG,CAACJ,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AACxD,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKb,gBAAL;AAAuB;AACrB,iCACKW,KADL;AAEEJ,UAAAA,SAAS,EAAE,IAFb;AAGEC,UAAAA,YAAY,EAAE;AAHhB;AAKD;;AACD,SAAKP,uBAAL;AAA8B;AAC5B,iCACKU,KADL;AAEEJ,UAAAA,SAAS,EAAE,KAFb;AAGEC,UAAAA,YAAY,EAAEI,MAAM,CAACE;AAHvB;AAKD;;AACD,SAAKZ,wBAAL;AAA+B;AAC7B,cAAMc,QAAQ,GAAGL,KAAK,CAACF,KAAN,CAAYQ,MAAZ,CAAmBL,MAAM,CAACE,OAA1B,CAAjB;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACA,iCACKL,KADL;AAEEF,UAAAA,KAAK,EAAEO,QAFT;AAGET,UAAAA,SAAS,EAAE,KAHb;AAIEC,UAAAA,YAAY,EAAE;AAJhB;AAMD;;AACD;AACE,aAAOG,KAAP;AA1BJ;AA4BD,CA7BM","sourcesContent":["import {\r\n  SIGN_UP,\r\n  SIGN_UP_FAILED,\r\n  SIGN_UP_SUCCESS,\r\n  LOG_IN,\r\n  LOG_IN_FAILED,\r\n  LOG_IN_SUCCESS,\r\n  GET_PUBLIC_JOKES,\r\n  GET_PUBLIC_JOKES_FAILED,\r\n  GET_PUBLIC_JOKES_SUCCESS,\r\n} from '../actions/index'\r\n\r\n\r\nconst initialState = {\r\n  username: \"\",\r\n  password: \"\",\r\n  isLoggedIn: false,\r\n  isLoading: false,\r\n  errorMessage: null,\r\n  jokes: []\r\n};\r\n\r\nexport const accountReducer = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case SIGN_UP: {\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        errorMessage: null\r\n      }\r\n    }\r\n    case SIGN_UP_FAILED: {\r\n      return {\r\n        ...state,\r\n        errorMessage: action.payload,\r\n        isLoading: false\r\n      }\r\n    }\r\n    case SIGN_UP_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        errorMessage: null,\r\n      }\r\n    }\r\n    case LOG_IN: {\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        errorMessage: null\r\n      }\r\n    }\r\n    case LOG_IN_FAILED: {\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        errorMessage: action.payload\r\n      }\r\n    }\r\n    case LOG_IN_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        errorMessage: null\r\n      }\r\n    }\r\n    default: \r\n      return state\r\n  }\r\n}\r\n\r\nexport const getJokes = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case GET_PUBLIC_JOKES: {\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        errorMessage: null\r\n      }\r\n    }\r\n    case GET_PUBLIC_JOKES_FAILED: {\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        errorMessage: action.payload\r\n      }\r\n    }\r\n    case GET_PUBLIC_JOKES_SUCCESS: {\r\n      const newJokes = state.jokes.concat(action.payload)\r\n      console.log(newJokes)\r\n      return {\r\n        ...state,\r\n        jokes: newJokes,\r\n        isLoading: false,\r\n        errorMessage: null\r\n      }\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}
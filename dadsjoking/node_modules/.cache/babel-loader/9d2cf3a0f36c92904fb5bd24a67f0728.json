{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\bryan\\\\Documents\\\\GitHub\\\\React\\\\dadsjoking\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\bryan\\\\Documents\\\\GitHub\\\\React\\\\dadsjoking\\\\src\\\\views\\\\LoginPage.js\";\nimport React from 'react';\nimport { login } from '../actions/index';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport NavBar from '../components/NavBar';\n\nclass LoginPage extends React.Component {\n  constructor() {\n    super();\n\n    this.handleChanges = e => {\n      this.setState(_objectSpread({}, this.state, {\n        [e.target.name]: e.target.value\n      }));\n    };\n\n    this.submit = e => {\n      e.preventDefault();\n      const _this$state = this.state,\n            username = _this$state.username,\n            password = _this$state.password;\n      this.props.login(username, password).then(() => {\n        this.props.history.push(\"/\");\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.state = {\n      username: '',\n      password: ''\n    };\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          username = _this$state2.username,\n          password = _this$state2.password;\n    const _this$props = this.props,\n          isLoading = _this$props.isLoading,\n          errorMessage = _this$props.errorMessage;\n    return React.createElement(\"div\", {\n      className: \"loginForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Login\"), React.createElement(NavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Username\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"username\",\n      placeholder: \"Username\",\n      value: username,\n      onChange: this.handleChanges,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Password\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: this.handleChanges,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    })), React.createElement(Button, {\n      onClick: this.submit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Login\")));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  isLoading: state.isLoading,\n  errorMessage: state.errorMessage\n});\n\nconst mapDispatchToProps = {\n  login\n};\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(LoginPage));","map":{"version":3,"sources":["C:\\Users\\bryan\\Documents\\GitHub\\React\\dadsjoking\\src\\views\\LoginPage.js"],"names":["React","login","connect","withRouter","Button","Form","FormGroup","Label","Input","FormText","NavBar","LoginPage","Component","constructor","handleChanges","e","setState","state","target","name","value","submit","preventDefault","username","password","props","then","history","push","catch","err","console","log","render","isLoading","errorMessage","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {login} from '../actions/index'\r\nimport {connect} from 'react-redux'\r\nimport {withRouter} from 'react-router-dom'\r\nimport {Button, Form, FormGroup, Label, Input, FormText} from 'reactstrap'\r\nimport NavBar from '../components/NavBar'\r\n\r\n\r\nclass LoginPage extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            username: '',\r\n            password: ''\r\n        }\r\n    }\r\n\r\n    handleChanges = e => {\r\n        this.setState({\r\n            ...this.state,\r\n            [e.target.name]: e.target.value\r\n          });\r\n    }\r\n\r\n    submit = e => {\r\n        e.preventDefault()\r\n        const {username, password} = this.state\r\n        this.props.login(username, password)\r\n            .then(() => {\r\n                this.props.history.push(\"/\")\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const {username, password} = this.state\r\n        const {isLoading, errorMessage} = this.props\r\n        return (\r\n            <div className = 'loginForm'>\r\n                <h2>Login</h2>\r\n                <NavBar />\r\n                <Form>\r\n                    <FormGroup>\r\n                        <Label for = 'username'>Username</Label>\r\n                        <Input type = 'text' name = 'username' placeholder = 'Username' value = {username} onChange = {this.handleChanges} />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for = 'password'>Password</Label>\r\n                        <Input type = 'text' name = 'password' placeholder = 'Password' value = {password} onChange = {this.handleChanges} />\r\n                    </FormGroup>\r\n                    <Button onClick = {this.submit}>Login</Button>\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isLoading: state.isLoading,\r\n    errorMessage: state.errorMessage\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    login\r\n}\r\n\r\nexport default withRouter(\r\n    connect(\r\n        mapStateToProps,\r\n        mapDispatchToProps\r\n    )(LoginPage))"]},"metadata":{},"sourceType":"module"}
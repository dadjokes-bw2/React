{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bryan\\\\Documents\\\\GitHub\\\\DadJokes\\\\dadsjoking\\\\src\\\\views\\\\PublicJokes.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { getPublicJokes, deletePublicJoke } from '../actions/index';\nimport { withRouter, Link } from 'react-router-dom';\nimport { Card, CardBody, CardText, Button } from 'reactstrap';\nimport NavBar from '../components/NavBar';\n\nfunction PublicJokes(props) {\n  const isLoading = props.isLoading,\n        errorMessage = props.errorMessage,\n        jokes = props.jokes;\n\n  if (isLoading) {\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, \"Loading Jokes...\");\n  }\n\n  return React.createElement(\"section\", {\n    className: \"public-jokes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(NavBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Public Jokes\"), jokes.map(joke => {\n    return React.createElement(Card, {\n      key: joke.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(CardText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, joke.joke), React.createElement(Button, {\n      outline: true,\n      color: \"primary\",\n      onClick: () => {\n        this.props.deleteJoke(joke.id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"\\u2716\"), React.createElement(Button, {\n      outline: true,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"\\u270F\")));\n  }), React.createElement(Link, {\n    to: \"/addJoke\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Button, {\n    outline: true,\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Add joke!\")));\n}\n\nconst mapStateToProps = state => {\n  return {\n    isLoading: state.isLoading,\n    errorMessage: state.errorMessage,\n    jokes: state.jokes\n  };\n};\n\nconst mapDispatchToProps = {\n  getPublicJokes,\n  deletePublicJoke\n};\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(PublicJokes));","map":{"version":3,"sources":["C:\\Users\\bryan\\Documents\\GitHub\\DadJokes\\dadsjoking\\src\\views\\PublicJokes.js"],"names":["React","connect","getPublicJokes","deletePublicJoke","withRouter","Link","Card","CardBody","CardText","Button","NavBar","PublicJokes","props","isLoading","errorMessage","jokes","map","joke","id","deleteJoke","mapStateToProps","state","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,cAAR,EAAwBC,gBAAxB,QAA+C,kBAA/C;AACA,SAAQC,UAAR,EAAoBC,IAApB,QAA+B,kBAA/B;AACA,SACIC,IADJ,EACUC,QADV,EACoBC,QADpB,EAC8BC,MAD9B,QAEO,YAFP;AAGA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA,QACjBC,SADiB,GACiBD,KADjB,CACjBC,SADiB;AAAA,QACNC,YADM,GACiBF,KADjB,CACNE,YADM;AAAA,QACQC,KADR,GACiBH,KADjB,CACQG,KADR;;AAGxB,MAAIF,SAAJ,EAAe;AACX,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAP;AACH;;AAEG,SACI;AAAS,IAAA,SAAS,EAAG,cAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,EAGKE,KAAK,CAACC,GAAN,CAAWC,IAAD,IAAU;AACjB,WACI,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAIA,IAAI,CAACC,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAWD,IAAI,CAACA,IAAhB,CADJ,EAEI,oBAAC,MAAD;AAAQ,MAAA,OAAO,MAAf;AAAgB,MAAA,KAAK,EAAG,SAAxB;AAAkC,MAAA,OAAO,EAAI,MAAM;AAAC,aAAKL,KAAL,CAAWO,UAAX,CAAsBF,IAAI,CAACC,EAA3B;AAA+B,OAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAGI,oBAAC,MAAD;AAAQ,MAAA,OAAO,MAAf;AAAgB,MAAA,KAAK,EAAG,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,CADJ,CADJ;AAUH,GAXA,CAHL,EAeI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAG,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsB,oBAAC,MAAD;AAAQ,IAAA,OAAO,MAAf;AAAgB,IAAA,KAAK,EAAG,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAtB,CAfJ,CADJ;AAoBP;;AAED,MAAME,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHR,IAAAA,SAAS,EAAEQ,KAAK,CAACR,SADd;AAEHC,IAAAA,YAAY,EAAEO,KAAK,CAACP,YAFjB;AAGHC,IAAAA,KAAK,EAAEM,KAAK,CAACN;AAHV,GAAP;AAKH,CAND;;AAQA,MAAMO,kBAAkB,GAAG;AACvBpB,EAAAA,cADuB;AAEvBC,EAAAA;AAFuB,CAA3B;AAKA,eAAeC,UAAU,CACrBH,OAAO,CACHmB,eADG,EAEHE,kBAFG,CAAP,CAGEX,WAHF,CADqB,CAAzB","sourcesContent":["import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {getPublicJokes, deletePublicJoke} from '../actions/index'\r\nimport {withRouter, Link} from 'react-router-dom'\r\nimport {\r\n    Card, CardBody, CardText, Button,\r\n} from 'reactstrap'\r\nimport NavBar from '../components/NavBar'\r\n\r\nfunction PublicJokes(props) {\r\n    const {isLoading, errorMessage, jokes} = props\r\n\r\n    if (isLoading) {\r\n        return <p>Loading Jokes...</p>\r\n    }\r\n    \r\n        return (\r\n            <section className = 'public-jokes'>\r\n                <NavBar />\r\n                <h2>Public Jokes</h2>\r\n                {jokes.map((joke) => {\r\n                    return (\r\n                        <Card key = {joke.id}>\r\n                            <CardBody>\r\n                                <CardText>{joke.joke}</CardText>\r\n                                <Button outline color = 'primary' onClick = {() => {this.props.deleteJoke(joke.id)}}>✖</Button>\r\n                                <Button outline color = 'primary' >✏</Button>\r\n                            </CardBody>\r\n                            \r\n                        </Card>\r\n                    )\r\n                })}\r\n                <Link to = '/addJoke'><Button outline color = 'secondary'>Add joke!</Button></Link>\r\n            </section>\r\n        )\r\n    \r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoading: state.isLoading,\r\n        errorMessage: state.errorMessage,\r\n        jokes: state.jokes\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    getPublicJokes,\r\n    deletePublicJoke\r\n}\r\n\r\nexport default withRouter(\r\n    connect(\r\n        mapStateToProps,\r\n        mapDispatchToProps\r\n    )(PublicJokes))"]},"metadata":{},"sourceType":"module"}
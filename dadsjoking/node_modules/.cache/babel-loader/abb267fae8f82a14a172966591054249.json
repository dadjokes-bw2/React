{"ast":null,"code":"import axios from 'axios'; //Sign-up action\n\nexport const SIGN_UP = 'SIGN_UP';\nexport const SIGN_UP_FAILED = 'SIGN_UP_FAILED';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS'; //Log-in action\n\nexport const LOG_IN = 'LOG_IN';\nexport const LOG_IN_FAILED = 'LOG_IN_FAILED';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS'; //Get public jokes\n\nexport const GET_PUBLIC_JOKES = 'GET_PUBLIC_JOKES';\nexport const GET_PUBLIC_JOKES_FAILED = 'GET_PUBLIC_JOKES_FAILED';\nexport const GET_PUBLIC_JOKES_SUCCESS = 'GET_PUBLIC_JOKES_SUCCESS'; //Get private jokes\n\nexport const GET_PRIVATE_JOKES = 'GET_PRIVATE_JOKES';\nexport const GET_PRIVATE_JOKES_FAILED = 'GET_PRIVATE_JOKES_FAILED';\nexport const GET_PRIVATE_JOKES_SUCCESS = 'GET_PRIVATE_JOKES_SUCCESS'; //Add Joke\n\nexport const ADD_PUBLIC_JOKE = 'ADD_PUBLIC_JOKE';\nexport const ADD_PUBLIC_JOKE_SUCCESS = 'ADD_PUBLIC_JOKE_SUCCESS';\nexport const ADD_PUBLIC_JOKE_FAILED = 'ADD_PUBLIC_JOKE_FAILED';\nexport const ADD_PRIVATE_JOKE = 'ADD_PRIVATE_JOKE';\nexport const ADD_PRIVATE_JOKE_SUCCESS = 'ADD_PRIVATE_JOKE_SUCCESS';\nexport const ADD_PRIVATE_JOKE_FAILED = 'ADD_PRIVATE_JOKE_FAILED'; //Edit Joke\n\nexport const EDIT_PRIVATE_JOKE = 'EDIT_PRIVATE_JOKE';\nexport const EDIT_PRIVATE_JOKE_SUCCESS = 'EDIT_PRIVATE_JOKE_SUCCESS';\nexport const EDIT_PRIVATE_JOKE_FAILED = 'EDIT_PRIVATE_JOKE_FAILED'; //Delete Jokes\n\nexport const DELETE_PUBLIC_JOKE = 'DELETE_PUBLIC_JOKE';\nexport const DELETE_PUBLIC_JOKE_SUCCESS = 'DELETE_PUBLIC_JOKE_SUCCESS';\nexport const DELETE_PUBLIC_JOKE_FAILED = 'DELETE_PUBLIC_JOKE_FAILED';\nexport const DELETE_PRIVATE_JOKE = 'DELETE_PRIVATE_JOKE';\nexport const DELETE_PRIVATE_JOKE_SUCCESS = 'DELETE_PRIVATE_JOKE_SUCCESS';\nexport const DELETE_PRIVATE_JOKE_FAILED = 'DELETE_PRIVATE_JOKE_FAILED';\nexport function signUp(username, password) {\n  return dispatch => {\n    dispatch({\n      type: SIGN_UP\n    });\n    const user = {\n      username,\n      password\n    };\n    return axios.post(\"https://backend-dadjokes.herokuapp.com/api/auth/register\", user).then(res => {\n      console.log(res);\n      dispatch({\n        type: SIGN_UP_SUCCESS,\n        payload: res.data,\n        user: jwtDecode(res.data.token)\n      });\n    }).catch(err => {\n      console.log(err);\n      dispatch({\n        type: SIGN_UP_FAILED,\n        payload: err\n      });\n    });\n  };\n}\nexport function login(username, password) {\n  return dispatch => {\n    dispatch({\n      type: LOG_IN\n    });\n    const user = {\n      username,\n      password\n    };\n    return axios.post(\"https://backend-dadjokes.herokuapp.com/api/auth/login\", user).then(res => {\n      localStorage.setItem('token', res.data.token);\n      dispatch({\n        type: LOG_IN_SUCCESS,\n        payload: res.data,\n        user: jwtDecode(res.data.token)\n      });\n    }).catch(err => {\n      console.log(err);\n      dispatch({\n        type: LOG_IN_FAILED,\n        payload: err\n      });\n    });\n  };\n}\nexport function getPublicJokes() {\n  return dispatch => {\n    dispatch({\n      type: GET_PUBLIC_JOKES\n    });\n    axios.get(\"https://backend-dadJokes.herokuapp.com/api/publicJokes\").then(res => {\n      dispatch({\n        type: GET_PUBLIC_JOKES_SUCCESS,\n        payload: res.data\n      });\n    }).catch(err => {\n      dispatch({\n        type: GET_PUBLIC_JOKES_FAILED,\n        payload: err\n      });\n    });\n  };\n}\nexport function getPrivateJokes() {\n  return dispatch => {\n    dispatch({\n      type: GET_PRIVATE_JOKES\n    });\n    const headers = {\n      Authorization: localStorage.getItem('token')\n    };\n    axios.get(\"https://backend-dadJokes.herokuapp.com/api/privateJokes\", {\n      headers\n    }).then(res => {\n      dispatch({\n        type: GET_PRIVATE_JOKES_SUCCESS,\n        payload: res.data\n      });\n    }).catch(err => {\n      dispatch({\n        type: GET_PRIVATE_JOKES_FAILED,\n        payload: err\n      });\n    });\n  };\n}\nexport function addPublicJoke(joke) {\n  return dispatch => {\n    dispatch({\n      type: ADD_PUBLIC_JOKE\n    });\n    const body = {\n      joke\n    };\n    return axios.post(\"https://backend-dadJokes.herokuapp.com/api/publicJokes\", body).then(res => {\n      console.log(res);\n      dispatch({\n        type: ADD_PUBLIC_JOKE_SUCCESS,\n        payload: res.data\n      });\n    }).catch(err => {\n      console.log(err);\n      dispatch({\n        type: ADD_PUBLIC_JOKE_FAILED,\n        payload: err\n      });\n    });\n  };\n}\nexport function addPrivateJoke(joke) {\n  return dispatch => {\n    dispatch({\n      type: ADD_PRIVATE_JOKE\n    });\n    const headers = {\n      Authorization: localStorage.getItem('token')\n    };\n    console.log(joke); // console.log(body)\n    // console.log(headers)\n\n    return axios.post(\"https://backend-dadJokes.herokuapp.com/api/privateJokes\", joke, {\n      headers\n    }).then(res => {\n      console.log(res);\n      dispatch({\n        type: ADD_PRIVATE_JOKE_SUCCESS,\n        payload: res.data\n      });\n    }).catch(err => {\n      console.log(err);\n      dispatch({\n        type: ADD_PRIVATE_JOKE_FAILED,\n        payload: err\n      });\n    });\n  };\n}\nexport function editPrivateJoke(joke) {\n  return dispatch => {\n    dispatch({\n      type: EDIT_PRIVATE_JOKE\n    });\n    const headers = {\n      Authorization: localStorage.getItem('token')\n    };\n    const body = {\n      id: joke.id\n    };\n    console.log(headers, body);\n    return axios.put(\"https://backend-dadJokes.herokuapp.com/api/privateJokes\", body, headers).then(res => {\n      console.log(res);\n      dispatch({\n        type: EDIT_PRIVATE_JOKE_SUCCESS,\n        payload: res.data\n      });\n    }).catch(err => {\n      dispatch({\n        type: EDIT_PRIVATE_JOKE_FAILED,\n        payload: err\n      });\n    });\n  };\n}\nexport function deletePublicJoke(joke) {\n  return dispatch => {\n    dispatch({\n      type: DELETE_PUBLIC_JOKE\n    });\n    return axios.delete(\"https://backend-dadJokes.herokuapp.com/api/publicJokes/\".concat(joke)).then(res => {\n      console.log(res);\n      dispatch({\n        type: DELETE_PUBLIC_JOKE_SUCCESS,\n        payload: res.data\n      });\n    }).catch(err => {\n      console.log(err);\n      dispatch({\n        type: DELETE_PUBLIC_JOKE_FAILED,\n        payload: err\n      });\n    });\n  };\n}\nexport function deletePrivateJoke(joke) {\n  return dispatch => {\n    dispatch({\n      type: DELETE_PRIVATE_JOKE\n    });\n    const headers = {\n      Authorization: localStorage.getItem('token')\n    };\n    return axios.delete(\"https://backend-dadJokes.herokuapp.com/api/privateJokes/\".concat(joke), headers).then(res => {\n      console.log(res);\n      dispatch({\n        type: DELETE_PRIVATE_JOKE_SUCCESS\n      });\n    }).catch(err => {\n      console.log(err);\n      dispatch({\n        type: DELETE_PRIVATE_JOKE_FAILED\n      });\n    });\n  };\n}","map":{"version":3,"sources":["C:\\Users\\bryan\\Documents\\GitHub\\DadJokes\\dadsjoking\\src\\actions\\index.js"],"names":["axios","SIGN_UP","SIGN_UP_FAILED","SIGN_UP_SUCCESS","LOG_IN","LOG_IN_FAILED","LOG_IN_SUCCESS","GET_PUBLIC_JOKES","GET_PUBLIC_JOKES_FAILED","GET_PUBLIC_JOKES_SUCCESS","GET_PRIVATE_JOKES","GET_PRIVATE_JOKES_FAILED","GET_PRIVATE_JOKES_SUCCESS","ADD_PUBLIC_JOKE","ADD_PUBLIC_JOKE_SUCCESS","ADD_PUBLIC_JOKE_FAILED","ADD_PRIVATE_JOKE","ADD_PRIVATE_JOKE_SUCCESS","ADD_PRIVATE_JOKE_FAILED","EDIT_PRIVATE_JOKE","EDIT_PRIVATE_JOKE_SUCCESS","EDIT_PRIVATE_JOKE_FAILED","DELETE_PUBLIC_JOKE","DELETE_PUBLIC_JOKE_SUCCESS","DELETE_PUBLIC_JOKE_FAILED","DELETE_PRIVATE_JOKE","DELETE_PRIVATE_JOKE_SUCCESS","DELETE_PRIVATE_JOKE_FAILED","signUp","username","password","dispatch","type","user","post","then","res","console","log","payload","data","jwtDecode","token","catch","err","login","localStorage","setItem","getPublicJokes","get","getPrivateJokes","headers","Authorization","getItem","addPublicJoke","joke","body","addPrivateJoke","editPrivateJoke","id","put","deletePublicJoke","delete","deletePrivateJoke"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\n\r\n//Sign-up action\r\nexport const SIGN_UP = 'SIGN_UP'  \r\nexport const SIGN_UP_FAILED = 'SIGN_UP_FAILED'\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS'\r\n\r\n//Log-in action\r\nexport const LOG_IN = 'LOG_IN'\r\nexport const LOG_IN_FAILED = 'LOG_IN_FAILED'\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS'\r\n\r\n//Get public jokes\r\nexport const GET_PUBLIC_JOKES = 'GET_PUBLIC_JOKES'\r\nexport const GET_PUBLIC_JOKES_FAILED = 'GET_PUBLIC_JOKES_FAILED'\r\nexport const GET_PUBLIC_JOKES_SUCCESS = 'GET_PUBLIC_JOKES_SUCCESS'\r\n\r\n//Get private jokes\r\nexport const GET_PRIVATE_JOKES = 'GET_PRIVATE_JOKES'\r\nexport const GET_PRIVATE_JOKES_FAILED = 'GET_PRIVATE_JOKES_FAILED'\r\nexport const GET_PRIVATE_JOKES_SUCCESS = 'GET_PRIVATE_JOKES_SUCCESS'\r\n\r\n//Add Joke\r\nexport const ADD_PUBLIC_JOKE = 'ADD_PUBLIC_JOKE'\r\nexport const ADD_PUBLIC_JOKE_SUCCESS = 'ADD_PUBLIC_JOKE_SUCCESS'\r\nexport const ADD_PUBLIC_JOKE_FAILED = 'ADD_PUBLIC_JOKE_FAILED'\r\n\r\nexport const ADD_PRIVATE_JOKE = 'ADD_PRIVATE_JOKE'\r\nexport const ADD_PRIVATE_JOKE_SUCCESS = 'ADD_PRIVATE_JOKE_SUCCESS'\r\nexport const ADD_PRIVATE_JOKE_FAILED = 'ADD_PRIVATE_JOKE_FAILED'\r\n\r\n//Edit Joke\r\nexport const EDIT_PRIVATE_JOKE = 'EDIT_PRIVATE_JOKE'\r\nexport const EDIT_PRIVATE_JOKE_SUCCESS = 'EDIT_PRIVATE_JOKE_SUCCESS'\r\nexport const EDIT_PRIVATE_JOKE_FAILED = 'EDIT_PRIVATE_JOKE_FAILED'\r\n\r\n//Delete Jokes\r\nexport const DELETE_PUBLIC_JOKE = 'DELETE_PUBLIC_JOKE'\r\nexport const DELETE_PUBLIC_JOKE_SUCCESS = 'DELETE_PUBLIC_JOKE_SUCCESS'\r\nexport const DELETE_PUBLIC_JOKE_FAILED = 'DELETE_PUBLIC_JOKE_FAILED'\r\n\r\nexport const DELETE_PRIVATE_JOKE = 'DELETE_PRIVATE_JOKE'\r\nexport const DELETE_PRIVATE_JOKE_SUCCESS = 'DELETE_PRIVATE_JOKE_SUCCESS'\r\nexport const DELETE_PRIVATE_JOKE_FAILED = 'DELETE_PRIVATE_JOKE_FAILED'\r\n\r\nexport function signUp(username, password) {\r\n    return dispatch => {\r\n        dispatch({type:SIGN_UP})\r\n\r\n        const user = {username, password}\r\n\r\n        return axios.post(\"https://backend-dadjokes.herokuapp.com/api/auth/register\", user)\r\n            .then((res) => {\r\n                console.log(res)\r\n                dispatch({\r\n                    type: SIGN_UP_SUCCESS, \r\n                    payload: res.data,\r\n                    user: jwtDecode(res.data.token)\r\n                })\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n                dispatch({type: SIGN_UP_FAILED, payload: err})\r\n            })\r\n    }\r\n}\r\n\r\nexport function login(username, password) {\r\n    return dispatch => {\r\n        dispatch({type:LOG_IN})\r\n\r\n        const user = {username, password}\r\n\r\n        return axios.post(\"https://backend-dadjokes.herokuapp.com/api/auth/login\", user)\r\n            .then((res) => {\r\n                localStorage.setItem('token', res.data.token)\r\n                dispatch({\r\n                    type: LOG_IN_SUCCESS, \r\n                    payload: res.data, \r\n                    user: jwtDecode(res.data.token)\r\n                })\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n                dispatch({type: LOG_IN_FAILED, payload: err})\r\n            })\r\n    }\r\n}\r\n\r\nexport function getPublicJokes() {\r\n    return dispatch => {\r\n        dispatch({type: GET_PUBLIC_JOKES})\r\n\r\n        axios.get(\"https://backend-dadJokes.herokuapp.com/api/publicJokes\")\r\n            .then((res) => {\r\n                dispatch({type: GET_PUBLIC_JOKES_SUCCESS, payload: res.data })\r\n            })\r\n            .catch((err) => {\r\n                dispatch({type: GET_PUBLIC_JOKES_FAILED, payload: err})\r\n            })\r\n    }\r\n}\r\n\r\nexport function getPrivateJokes() {\r\n    return dispatch => {\r\n        dispatch({type: GET_PRIVATE_JOKES})\r\n\r\n        const headers = {\r\n            Authorization: localStorage.getItem('token')\r\n        }\r\n\r\n        axios.get(\"https://backend-dadJokes.herokuapp.com/api/privateJokes\", {headers})\r\n            .then((res) => {\r\n                dispatch({type: GET_PRIVATE_JOKES_SUCCESS, payload: res.data })\r\n            })\r\n            .catch((err) => {\r\n                dispatch({type: GET_PRIVATE_JOKES_FAILED, payload: err})\r\n            })\r\n    }\r\n}\r\n\r\nexport function addPublicJoke(joke) {\r\n    return dispatch => {\r\n        dispatch({type:ADD_PUBLIC_JOKE})\r\n\r\n        const body = {\r\n            joke\r\n        }      \r\n\r\n        return axios.post(\"https://backend-dadJokes.herokuapp.com/api/publicJokes\", body)\r\n            .then((res) => {\r\n                console.log(res)\r\n                dispatch({type: ADD_PUBLIC_JOKE_SUCCESS, payload: res.data})\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n                dispatch({type: ADD_PUBLIC_JOKE_FAILED, payload: err})\r\n            })\r\n    }\r\n}\r\n\r\nexport function addPrivateJoke(joke) {\r\n    return dispatch => {\r\n        dispatch({type: ADD_PRIVATE_JOKE})\r\n\r\n        const headers = {\r\n            Authorization: localStorage.getItem('token')\r\n        }\r\n        console.log(joke)\r\n       \r\n\r\n        // console.log(body)\r\n        // console.log(headers)\r\n\r\n        return axios.post(\"https://backend-dadJokes.herokuapp.com/api/privateJokes\", joke, {headers})\r\n            .then((res) => {\r\n                console.log(res)\r\n                dispatch({type: ADD_PRIVATE_JOKE_SUCCESS, payload: res.data})\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n                dispatch({type: ADD_PRIVATE_JOKE_FAILED, payload: err})\r\n            })\r\n    }\r\n}\r\n\r\nexport function editPrivateJoke(joke) {\r\n    return dispatch => {\r\n        dispatch({type: EDIT_PRIVATE_JOKE})\r\n        const headers = {\r\n            Authorization: localStorage.getItem('token'),\r\n        }\r\n        const body = {\r\n            id: joke.id\r\n        }\r\n        console.log(headers,body)\r\n        return axios.put(\"https://backend-dadJokes.herokuapp.com/api/privateJokes\", body, headers )\r\n            .then((res)=>{\r\n                console.log(res)\r\n                dispatch({type: EDIT_PRIVATE_JOKE_SUCCESS, payload: res.data})\r\n            })\r\n            .catch((err) => {\r\n                dispatch({type: EDIT_PRIVATE_JOKE_FAILED, payload: err})\r\n            })\r\n    }\r\n}\r\n\r\nexport function deletePublicJoke(joke) {\r\n    return dispatch => {\r\n        dispatch({ type: DELETE_PUBLIC_JOKE})\r\n\r\n        return axios.delete(`https://backend-dadJokes.herokuapp.com/api/publicJokes/${joke}`)\r\n            .then((res) => {\r\n                console.log(res)\r\n                dispatch({type: DELETE_PUBLIC_JOKE_SUCCESS, payload: res.data})\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n                dispatch({type: DELETE_PUBLIC_JOKE_FAILED, payload: err})\r\n            })\r\n    }\r\n}\r\n\r\nexport function deletePrivateJoke(joke) {\r\n    return dispatch => {\r\n        dispatch({ type: DELETE_PRIVATE_JOKE})\r\n        const headers = {\r\n            Authorization: localStorage.getItem('token')\r\n        }\r\n\r\n        return axios.delete(`https://backend-dadJokes.herokuapp.com/api/privateJokes/${joke}`, headers)\r\n            .then((res) => {\r\n                console.log(res)\r\n                dispatch({type: DELETE_PRIVATE_JOKE_SUCCESS})\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n                dispatch({type: DELETE_PRIVATE_JOKE_FAILED})\r\n            })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}
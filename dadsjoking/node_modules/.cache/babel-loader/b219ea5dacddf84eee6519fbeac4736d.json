{"ast":null,"code":"import axios from 'axios'; //Sign-up action\n\nexport const SIGN_UP = 'SIGN_UP';\nexport const SIGN_UP_FAILED = 'SIGN_UP_FAILED';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS'; //Log-in action\n\nexport const LOG_IN = 'LOG_IN';\nexport const LOG_IN_FAILED = 'LOG_IN_FAILED';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS'; //Get public jokes\n\nexport const GET_PUBLIC_JOKES = 'GET_PUBLIC_JOKES';\nexport const GET_PUBLIC_JOKES_FAILED = 'GET_PUBLIC_JOKES_FAILED';\nexport const GET_PUBLIC_JOKES_SUCCESS = 'GET_PUBLIC_JOKES_SUCCESS'; //Get private jokes\n\nexport const GET_PRIVATE_JOKES = 'GET_PRIVATE_JOKES';\nexport const GET_PRIVATE_JOKES_FAILED = 'GET_PRIVATE_JOKES_FAILED';\nexport const GET_PRIVATE_JOKES_SUCCESS = 'GET_PRIVATE_JOKES_SUCCESS'; //Add Joke\n\nexport const ADD_PUBLIC_JOKE = 'ADD_PUBLIC_JOKE';\nexport const ADD_PUBLIC_JOKE_SUCCESS = 'ADD_PUBLIC_JOKE_SUCCESS';\nexport const ADD_PUBLIC_JOKE_FAILED = 'ADD_PUBLIC_JOKE_FAILED';\nexport const ADD_PRIVATE_JOKE = 'ADD_PRIVATE_JOKE';\nexport const ADD_PRIVATE_JOKE_SUCCESS = 'ADD_PRIVATE_JOKE_SUCCESS';\nexport const ADD_PRIVATE_JOKE_FAILED = 'ADD_PRIVATE_JOKE_FAILED'; //Edit Joke\n\nexport const EDIT_PRIVATE_JOKE = 'EDIT_PRIVATE_JOKE';\nexport const EDIT_PRIVATE_JOKE_SUCCESS = 'EDIT_PRIVATE_JOKE_SUCCESS';\nexport const EDIT_PRIVATE_JOKE_FAILED = 'EDIT_PRIVATE_JOKE_FAILED';\nexport function signUp(user, pass) {\n  return dispatch => {\n    dispatch({\n      type: SIGN_UP\n    });\n    return axios.post(\"https://backend-dadjokes.herokuapp.com/api/auth/register\", {\n      user,\n      pass\n    }).then(res => {\n      console.log(res);\n      dispatch({\n        type: SIGN_UP_SUCCESS\n      });\n    }).catch(err => {\n      console.log(err);\n      dispatch({\n        type: SIGN_UP_FAILED\n      });\n    });\n  };\n}\nexport function login(user, pass) {\n  return dispatch => {\n    dispatch({\n      type: LOG_IN\n    });\n    return axios.post(\"https://backend-dadjokes.herokuapp.com/api/auth/login\", {\n      user,\n      pass\n    }).then(res => {\n      console.log(res);\n      dispatch({\n        type: LOG_IN_SUCCESS\n      });\n    }).catch(err => {\n      console.log(err);\n      dispatch({\n        type: LOG_IN_FAILED\n      });\n    });\n  };\n}\nexport function getPublicJokes() {\n  return dispatch => {\n    dispatch({\n      type: GET_PUBLIC_JOKES\n    });\n    axios.get(\"https://backend-dadJokes.herokuapp.com/api/publicJokes\").then(res => {\n      dispatch({\n        type: GET_PUBLIC_JOKES_SUCCESS,\n        payload: res\n      });\n    }).catch(err => {\n      dispatch({\n        type: GET_PUBLIC_JOKES_SUCCESS,\n        payload: err\n      });\n    });\n  };\n}\nexport function getPrivateJokes() {}\nexport function addPublicJoke(joke) {}\nexport function addPrivateJoke(joke) {}\nexport function editPublicJoke(joke) {}","map":{"version":3,"sources":["C:\\Users\\bryan\\Documents\\GitHub\\DadJokes\\dadsjoking\\src\\actions\\index.js"],"names":["axios","SIGN_UP","SIGN_UP_FAILED","SIGN_UP_SUCCESS","LOG_IN","LOG_IN_FAILED","LOG_IN_SUCCESS","GET_PUBLIC_JOKES","GET_PUBLIC_JOKES_FAILED","GET_PUBLIC_JOKES_SUCCESS","GET_PRIVATE_JOKES","GET_PRIVATE_JOKES_FAILED","GET_PRIVATE_JOKES_SUCCESS","ADD_PUBLIC_JOKE","ADD_PUBLIC_JOKE_SUCCESS","ADD_PUBLIC_JOKE_FAILED","ADD_PRIVATE_JOKE","ADD_PRIVATE_JOKE_SUCCESS","ADD_PRIVATE_JOKE_FAILED","EDIT_PRIVATE_JOKE","EDIT_PRIVATE_JOKE_SUCCESS","EDIT_PRIVATE_JOKE_FAILED","signUp","user","pass","dispatch","type","post","then","res","console","log","catch","err","login","getPublicJokes","get","payload","getPrivateJokes","addPublicJoke","joke","addPrivateJoke","editPublicJoke"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\n\r\n//Sign-up action\r\nexport const SIGN_UP = 'SIGN_UP'  \r\nexport const SIGN_UP_FAILED = 'SIGN_UP_FAILED'\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS'\r\n\r\n//Log-in action\r\nexport const LOG_IN = 'LOG_IN'\r\nexport const LOG_IN_FAILED = 'LOG_IN_FAILED'\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS'\r\n\r\n//Get public jokes\r\nexport const GET_PUBLIC_JOKES = 'GET_PUBLIC_JOKES'\r\nexport const GET_PUBLIC_JOKES_FAILED = 'GET_PUBLIC_JOKES_FAILED'\r\nexport const GET_PUBLIC_JOKES_SUCCESS = 'GET_PUBLIC_JOKES_SUCCESS'\r\n\r\n//Get private jokes\r\nexport const GET_PRIVATE_JOKES = 'GET_PRIVATE_JOKES'\r\nexport const GET_PRIVATE_JOKES_FAILED = 'GET_PRIVATE_JOKES_FAILED'\r\nexport const GET_PRIVATE_JOKES_SUCCESS = 'GET_PRIVATE_JOKES_SUCCESS'\r\n\r\n//Add Joke\r\nexport const ADD_PUBLIC_JOKE = 'ADD_PUBLIC_JOKE'\r\nexport const ADD_PUBLIC_JOKE_SUCCESS = 'ADD_PUBLIC_JOKE_SUCCESS'\r\nexport const ADD_PUBLIC_JOKE_FAILED = 'ADD_PUBLIC_JOKE_FAILED'\r\n\r\nexport const ADD_PRIVATE_JOKE = 'ADD_PRIVATE_JOKE'\r\nexport const ADD_PRIVATE_JOKE_SUCCESS = 'ADD_PRIVATE_JOKE_SUCCESS'\r\nexport const ADD_PRIVATE_JOKE_FAILED = 'ADD_PRIVATE_JOKE_FAILED'\r\n\r\n//Edit Joke\r\nexport const EDIT_PRIVATE_JOKE = 'EDIT_PRIVATE_JOKE'\r\nexport const EDIT_PRIVATE_JOKE_SUCCESS = 'EDIT_PRIVATE_JOKE_SUCCESS'\r\nexport const EDIT_PRIVATE_JOKE_FAILED = 'EDIT_PRIVATE_JOKE_FAILED'\r\n\r\nexport function signUp(user, pass) {\r\n    return dispatch => {\r\n        dispatch({type:SIGN_UP})\r\n\r\n        return axios.post(\"https://backend-dadjokes.herokuapp.com/api/auth/register\", {user, pass})\r\n            .then((res) => {\r\n                console.log(res)\r\n                dispatch({type: SIGN_UP_SUCCESS})\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n                dispatch({type: SIGN_UP_FAILED})\r\n            })\r\n    }\r\n}\r\n\r\nexport function login(user, pass) {\r\n    return dispatch => {\r\n        dispatch({type:LOG_IN})\r\n\r\n        return axios.post(\"https://backend-dadjokes.herokuapp.com/api/auth/login\", {user, pass})\r\n            .then((res) => {\r\n                console.log(res)\r\n                dispatch({type: LOG_IN_SUCCESS})\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n                dispatch({type: LOG_IN_FAILED})\r\n            })\r\n    }\r\n}\r\n\r\nexport function getPublicJokes() {\r\n    return dispatch => {\r\n        dispatch({type: GET_PUBLIC_JOKES})\r\n\r\n        axios.get(\"https://backend-dadJokes.herokuapp.com/api/publicJokes\")\r\n            .then((res) => {\r\n                dispatch({type: GET_PUBLIC_JOKES_SUCCESS, payload: res })\r\n            })\r\n            .catch((err) => {\r\n                dispatch({type: GET_PUBLIC_JOKES_SUCCESS, payload: err})\r\n            })\r\n    }\r\n}\r\n\r\nexport function getPrivateJokes() {\r\n\r\n}\r\n\r\nexport function addPublicJoke(joke) {\r\n\r\n}\r\n\r\nexport function addPrivateJoke(joke) {\r\n\r\n}\r\n\r\nexport function editPublicJoke(joke) {\r\n\r\n}"]},"metadata":{},"sourceType":"module"}
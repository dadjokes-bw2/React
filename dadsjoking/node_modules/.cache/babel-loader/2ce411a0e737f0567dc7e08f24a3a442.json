{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bryan\\\\Documents\\\\GitHub\\\\DadJokes\\\\dadsjoking\\\\src\\\\views\\\\PrivateJokes.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { getPrivateJokes } from '../actions/index';\nimport { withRouter } from 'react-router-dom';\nimport { Card, CardBody, CardText, Button } from 'reactstrap';\nimport NavBar from '../components/NavBar';\n\nfunction PrivateJokes(props) {\n  const isLoading = props.isLoading,\n        errorMessage = props.errorMessage,\n        jokes = props.jokes;\n\n  if (isLoading) {\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, \"Loading Jokes...\");\n  }\n\n  return React.createElement(\"section\", {\n    className: \"private-jokes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(NavBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Private Jokes\"), privateJokes.map(joke => {\n    return React.createElement(Card, {\n      key: joke.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(CardText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, joke.joke), React.createElement(Button, {\n      outline: true,\n      color: \"primary\",\n      onClick: () => {\n        props.deletePrivateJoke(joke.id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"\\u2716\"), React.createElement(Button, {\n      outline: true,\n      color: \"primary\",\n      onClick: () => {\n        props.editPrivateJoke(joke.id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"\\u270F\")));\n  }), React.createElement(Link, {\n    to: \"/addJoke\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Button, {\n    outline: true,\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Add joke!\")));\n}\n\nconst mapStateToProps = state => {\n  return {\n    isLoading: state.isLoading,\n    errorMessage: state.errorMessage,\n    privateJokes: state.privateJokes\n  };\n};\n\nconst mapDispatchToProps = {\n  getPrivateJokes,\n  editPrivateJoke,\n  deletePrivateJoke\n};\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(PrivateJokes));","map":{"version":3,"sources":["C:\\Users\\bryan\\Documents\\GitHub\\DadJokes\\dadsjoking\\src\\views\\PrivateJokes.js"],"names":["React","connect","getPrivateJokes","withRouter","Card","CardBody","CardText","Button","NavBar","PrivateJokes","props","isLoading","errorMessage","jokes","privateJokes","map","joke","id","deletePrivateJoke","editPrivateJoke","mapStateToProps","state","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,eAAR,QAA8B,kBAA9B;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SACIC,IADJ,EACUC,QADV,EACoBC,QADpB,EAC8BC,MAD9B,QAEO,YAFP;AAGA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA,QAClBC,SADkB,GACgBD,KADhB,CAClBC,SADkB;AAAA,QACPC,YADO,GACgBF,KADhB,CACPE,YADO;AAAA,QACOC,KADP,GACgBH,KADhB,CACOG,KADP;;AAGzB,MAAIF,SAAJ,EAAe;AACX,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAP;AACH;;AAEG,SACI;AAAS,IAAA,SAAS,EAAG,eAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFJ,EAGKG,YAAY,CAACC,GAAb,CAAkBC,IAAD,IAAU;AACxB,WACI,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAIA,IAAI,CAACC,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAWD,IAAI,CAACA,IAAhB,CADJ,EAEI,oBAAC,MAAD;AAAQ,MAAA,OAAO,MAAf;AAAgB,MAAA,KAAK,EAAG,SAAxB;AAAkC,MAAA,OAAO,EAAI,MAAM;AAACN,QAAAA,KAAK,CAACQ,iBAAN,CAAwBF,IAAI,CAACC,EAA7B;AAAiC,OAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAGI,oBAAC,MAAD;AAAQ,MAAA,OAAO,MAAf;AAAgB,MAAA,KAAK,EAAG,SAAxB;AAAkC,MAAA,OAAO,EAAI,MAAM;AAACP,QAAAA,KAAK,CAACS,eAAN,CAAsBH,IAAI,CAACC,EAA3B;AAA+B,OAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,CADJ,CADJ;AAUH,GAXA,CAHL,EAeI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAG,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsB,oBAAC,MAAD;AAAQ,IAAA,OAAO,MAAf;AAAgB,IAAA,KAAK,EAAG,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAtB,CAfJ,CADJ;AAoBP;;AAED,MAAMG,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHV,IAAAA,SAAS,EAAEU,KAAK,CAACV,SADd;AAEHC,IAAAA,YAAY,EAAES,KAAK,CAACT,YAFjB;AAGHE,IAAAA,YAAY,EAAEO,KAAK,CAACP;AAHjB,GAAP;AAKH,CAND;;AAQA,MAAMQ,kBAAkB,GAAG;AACvBpB,EAAAA,eADuB;AAEvBiB,EAAAA,eAFuB;AAGvBD,EAAAA;AAHuB,CAA3B;AAMA,eAAef,UAAU,CACrBF,OAAO,CACHmB,eADG,EAEHE,kBAFG,CAAP,CAGEb,YAHF,CADqB,CAAzB","sourcesContent":["import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {getPrivateJokes} from '../actions/index'\r\nimport {withRouter} from 'react-router-dom'\r\nimport {\r\n    Card, CardBody, CardText, Button,\r\n} from 'reactstrap'\r\nimport NavBar from '../components/NavBar'\r\n\r\nfunction PrivateJokes(props) {\r\n    const {isLoading, errorMessage, jokes} = props\r\n\r\n    if (isLoading) {\r\n        return <p>Loading Jokes...</p>\r\n    }\r\n    \r\n        return (\r\n            <section className = 'private-jokes'>\r\n                <NavBar />\r\n                <h2>Private Jokes</h2>\r\n                {privateJokes.map((joke) => {\r\n                    return (\r\n                        <Card key = {joke.id}>\r\n                            <CardBody>\r\n                                <CardText>{joke.joke}</CardText>\r\n                                <Button outline color = 'primary' onClick = {() => {props.deletePrivateJoke(joke.id)}}>✖</Button>\r\n                                <Button outline color = 'primary' onClick = {() => {props.editPrivateJoke(joke.id)}}>✏</Button>\r\n                            </CardBody>\r\n                            \r\n                        </Card>\r\n                    )\r\n                })}\r\n                <Link to = '/addJoke'><Button outline color = 'secondary'>Add joke!</Button></Link>\r\n            </section>\r\n        )\r\n    \r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoading: state.isLoading,\r\n        errorMessage: state.errorMessage,\r\n        privateJokes: state.privateJokes\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    getPrivateJokes,\r\n    editPrivateJoke,\r\n    deletePrivateJoke\r\n}\r\n\r\nexport default withRouter(\r\n    connect(\r\n        mapStateToProps,\r\n        mapDispatchToProps\r\n    )(PrivateJokes))"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\bryan\\\\Documents\\\\GitHub\\\\DadJokes\\\\dadsjoking\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { SIGN_UP, SIGN_UP_FAILED, SIGN_UP_SUCCESS, LOG_IN, LOG_IN_FAILED, LOG_IN_SUCCESS, GET_PUBLIC_JOKES, GET_PUBLIC_JOKES_FAILED, GET_PUBLIC_JOKES_SUCCESS, ADD_PUBLIC_JOKE, ADD_PUBLIC_JOKE_FAILED, ADD_PUBLIC_JOKE_SUCCESS, DELETE_PUBLIC_JOKE, DELETE_PUBLIC_JOKE_FAILED, DELETE_PUBLIC_JOKE_SUCCESS, GET_PRIVATE_JOKES, GET_PRIVATE_JOKES_SUCCESS, GET_PRIVATE_JOKES_FAILED, ADD_PRIVATE_JOKE, ADD_PRIVATE_JOKE_FAILED, ADD_PRIVATE_JOKE_SUCCESS, EDIT_PRIVATE_JOKE, EDIT_PRIVATE_JOKE_FAILED, EDIT_PRIVATE_JOKE_SUCCESS, DELETE_PRIVATE_JOKE, DELETE_PRIVATE_JOKE_FAILED, DELETE_PRIVATE_JOKE_SUCCESS } from '../actions/index';\nimport jwtDecode from 'jwt-decode';\n\nconst initialState = (token => ({\n  currentUser: token ? jwtDecode(token) : null,\n  isAuthenticating: null,\n  isLoading: true,\n  errorMessage: null,\n  publicJokes: [],\n  privateJokes: []\n}))(localStorage.token);\n\nexport const rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SIGN_UP:\n      {\n        return _objectSpread({}, state, {\n          isAuthenticating: true\n        });\n      }\n\n    case SIGN_UP_FAILED:\n      {\n        return _objectSpread({}, state, {\n          errorMessage: action.payload,\n          isAuthenticating: false\n        });\n      }\n\n    case SIGN_UP_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          currentUser: action.user,\n          isAuthenticating: false,\n          errorMessage: null\n        });\n      }\n\n    case LOG_IN:\n      {\n        return _objectSpread({}, state, {\n          isAuthenticating: false,\n          isLoading: true,\n          errorMessage: null\n        });\n      }\n\n    case LOG_IN_FAILED:\n      {\n        return _objectSpread({}, state, {\n          isAuthenticating: false,\n          isLoading: false,\n          errorMessage: action.payload\n        });\n      }\n\n    case LOG_IN_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isAuthenticating: false,\n          currentUser: action.user,\n          isLoading: false,\n          errorMessage: null\n        });\n      }\n\n    case GET_PUBLIC_JOKES:\n      {\n        return _objectSpread({}, state, {\n          isLoading: true,\n          errorMessage: null\n        });\n      }\n\n    case GET_PUBLIC_JOKES_FAILED:\n      {\n        return _objectSpread({}, state, {\n          isLoading: false,\n          errorMessage: action.payload\n        });\n      }\n\n    case GET_PUBLIC_JOKES_SUCCESS:\n      {\n        console.log(action.payload);\n        const newJokes = state.publicJokes.concat(action.payload);\n        return _objectSpread({}, state, {\n          publicJokes: newJokes,\n          isLoading: false,\n          errorMessage: null\n        });\n      }\n\n    case GET_PRIVATE_JOKES:\n      {\n        return _objectSpread({}, state, {\n          isLoading: true,\n          errorMessage: null\n        });\n      }\n\n    case GET_PRIVATE_JOKES_FAILED:\n      {\n        return _objectSpread({}, state, {\n          isLoading: false,\n          errorMessage: action.payload\n        });\n      }\n\n    case GET_PRIVATE_JOKES_SUCCESS:\n      {\n        console.log(action.payload);\n        const newJokes = state.privateJokes.concat(action.payload);\n        return _objectSpread({}, state, {\n          privateJokes: newJokes,\n          isLoading: false,\n          errorMessage: null\n        });\n      }\n\n    case ADD_PUBLIC_JOKE:\n      {\n        console.log(action.payload);\n        return _objectSpread({}, state, {\n          isLoading: true,\n          errorMessage: null\n        });\n      }\n\n    case ADD_PUBLIC_JOKE_FAILED:\n      {\n        console.log(action.payload);\n        return _objectSpread({}, state, {\n          isLoading: false,\n          errorMessage: action.payload\n        });\n      }\n\n    case ADD_PUBLIC_JOKE_SUCCESS:\n      {\n        console.log(action.payload);\n        const newJokes = state.publicJokes.concat(action.payload);\n        return _objectSpread({}, state, {\n          publicJokes: newJokes,\n          isLoading: false,\n          errorMessage: null\n        });\n      }\n\n    case ADD_PRIVATE_JOKE:\n      {\n        return _objectSpread({}, state, {\n          isLoading: true,\n          errorMessage: null\n        });\n      }\n\n    case ADD_PRIVATE_JOKE_FAILED:\n      {\n        console.log(action.payload);\n        return _objectSpread({}, state, {\n          isLoading: false,\n          errorMessage: action.payload\n        });\n      }\n\n    case ADD_PRIVATE_JOKE_SUCCESS:\n      {\n        console.log(action.payload);\n        const newJokes = state.privateJokes.concat(action.payload);\n        return _objectSpread({}, state, {\n          privateJokes: newJokes,\n          isLoading: false,\n          errorMessage: null\n        });\n      }\n\n    case DELETE_PUBLIC_JOKE:\n      {\n        console.log(action.payload);\n        return _objectSpread({}, state, {\n          isLoading: true,\n          errorMessage: null\n        });\n      }\n\n    case DELETE_PUBLIC_JOKE_FAILED:\n      {\n        console.log(action.payload);\n        return _objectSpread({}, state, {\n          isLoading: false,\n          errorMessage: action.payload\n        });\n      }\n\n    case DELETE_PUBLIC_JOKE_SUCCESS:\n      {\n        console.log(action.payload);\n        return _objectSpread({}, state, {\n          isLoading: false,\n          errorMessage: null\n        });\n      }\n\n    case DELETE_PRIVATE_JOKE:\n      {\n        return _objectSpread({}, state, {\n          isLoading: true,\n          errorMessage: null\n        });\n      }\n\n    case DELETE_PRIVATE_JOKE_FAILED:\n      {\n        console.log(action.payload);\n        return _objectSpread({}, state, {\n          isLoading: false,\n          errorMessage: action.payload\n        });\n      }\n\n    case DELETE_PRIVATE_JOKE_SUCCESS:\n      {\n        console.log(action.payload);\n        return _objectSpread({}, state, {\n          isLoading: false,\n          errorMessage: null\n        });\n      }\n\n    case EDIT_PRIVATE_JOKE:\n      {\n        console.log(action.payload);\n        return _objectSpread({}, state, {\n          isLoading: true,\n          errorMessage: null\n        });\n      }\n\n    case EDIT_PRIVATE_JOKE_FAILED:\n      {\n        console.log(action.payload);\n        return _objectSpread({}, state, {\n          isLoading: false,\n          errorMessage: action.payload\n        });\n      }\n\n    case EDIT_PRIVATE_JOKE_SUCCESS:\n      {\n        console.log(action.payload);\n        return _objectSpread({}, state, {\n          isLoading: false,\n          errorMessage: null\n        });\n      }\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:\\Users\\bryan\\Documents\\GitHub\\DadJokes\\dadsjoking\\src\\reducers\\index.js"],"names":["SIGN_UP","SIGN_UP_FAILED","SIGN_UP_SUCCESS","LOG_IN","LOG_IN_FAILED","LOG_IN_SUCCESS","GET_PUBLIC_JOKES","GET_PUBLIC_JOKES_FAILED","GET_PUBLIC_JOKES_SUCCESS","ADD_PUBLIC_JOKE","ADD_PUBLIC_JOKE_FAILED","ADD_PUBLIC_JOKE_SUCCESS","DELETE_PUBLIC_JOKE","DELETE_PUBLIC_JOKE_FAILED","DELETE_PUBLIC_JOKE_SUCCESS","GET_PRIVATE_JOKES","GET_PRIVATE_JOKES_SUCCESS","GET_PRIVATE_JOKES_FAILED","ADD_PRIVATE_JOKE","ADD_PRIVATE_JOKE_FAILED","ADD_PRIVATE_JOKE_SUCCESS","EDIT_PRIVATE_JOKE","EDIT_PRIVATE_JOKE_FAILED","EDIT_PRIVATE_JOKE_SUCCESS","DELETE_PRIVATE_JOKE","DELETE_PRIVATE_JOKE_FAILED","DELETE_PRIVATE_JOKE_SUCCESS","jwtDecode","initialState","token","currentUser","isAuthenticating","isLoading","errorMessage","publicJokes","privateJokes","localStorage","rootReducer","state","action","type","payload","user","console","log","newJokes","concat"],"mappings":";AAAA,SACEA,OADF,EAEEC,cAFF,EAGEC,eAHF,EAIEC,MAJF,EAKEC,aALF,EAMEC,cANF,EAOEC,gBAPF,EAQEC,uBARF,EASEC,wBATF,EAUEC,eAVF,EAWEC,sBAXF,EAYEC,uBAZF,EAaEC,kBAbF,EAcEC,yBAdF,EAeEC,0BAfF,EAgBEC,iBAhBF,EAiBEC,yBAjBF,EAkBEC,wBAlBF,EAmBEC,gBAnBF,EAoBEC,uBApBF,EAqBEC,wBArBF,EAsBEC,iBAtBF,EAuBEC,wBAvBF,EAwBEC,yBAxBF,EAyBEC,mBAzBF,EA0BEC,0BA1BF,EA2BEC,2BA3BF,QA4BO,kBA5BP;AA6BA,OAAOC,SAAP,MAAsB,YAAtB;;AAGA,MAAMC,YAAY,GAAG,CAACC,KAAK,KAAK;AAC9BC,EAAAA,WAAW,EAAED,KAAK,GAAGF,SAAS,CAACE,KAAD,CAAZ,GAAsB,IADV;AAE9BE,EAAAA,gBAAgB,EAAE,IAFY;AAG9BC,EAAAA,SAAS,EAAE,IAHmB;AAI9BC,EAAAA,YAAY,EAAE,IAJgB;AAK9BC,EAAAA,WAAW,EAAE,EALiB;AAM9BC,EAAAA,YAAY,EAAE;AANgB,CAAL,CAAN,EAOjBC,YAAY,CAACP,KAPI,CAArB;;AASA,OAAO,MAAMQ,WAAW,GAAG,CAACC,KAAK,GAAGV,YAAT,EAAuBW,MAAvB,KAAkC;AAC3D,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKxC,OAAL;AAAc;AACZ,iCACKsC,KADL;AAEEP,UAAAA,gBAAgB,EAAE;AAFpB;AAID;;AACD,SAAK9B,cAAL;AAAqB;AACnB,iCACKqC,KADL;AAEEL,UAAAA,YAAY,EAAEM,MAAM,CAACE,OAFvB;AAGEV,UAAAA,gBAAgB,EAAE;AAHpB;AAKD;;AACD,SAAK7B,eAAL;AAAsB;AACpB,iCACKoC,KADL;AAEER,UAAAA,WAAW,EAAES,MAAM,CAACG,IAFtB;AAGEX,UAAAA,gBAAgB,EAAE,KAHpB;AAIEE,UAAAA,YAAY,EAAE;AAJhB;AAMD;;AACD,SAAK9B,MAAL;AAAa;AACX,iCACKmC,KADL;AAEEP,UAAAA,gBAAgB,EAAE,KAFpB;AAGEC,UAAAA,SAAS,EAAE,IAHb;AAIEC,UAAAA,YAAY,EAAE;AAJhB;AAMD;;AACD,SAAK7B,aAAL;AAAoB;AAClB,iCACKkC,KADL;AAEEP,UAAAA,gBAAgB,EAAE,KAFpB;AAGEC,UAAAA,SAAS,EAAE,KAHb;AAIEC,UAAAA,YAAY,EAAEM,MAAM,CAACE;AAJvB;AAMD;;AACD,SAAKpC,cAAL;AAAqB;AACnB,iCACKiC,KADL;AAEEP,UAAAA,gBAAgB,EAAE,KAFpB;AAGED,UAAAA,WAAW,EAAES,MAAM,CAACG,IAHtB;AAIEV,UAAAA,SAAS,EAAE,KAJb;AAKEC,UAAAA,YAAY,EAAE;AALhB;AAOD;;AAED,SAAK3B,gBAAL;AAAuB;AACrB,iCACKgC,KADL;AAEEN,UAAAA,SAAS,EAAE,IAFb;AAGEC,UAAAA,YAAY,EAAE;AAHhB;AAKD;;AACD,SAAK1B,uBAAL;AAA8B;AAC5B,iCACK+B,KADL;AAEEN,UAAAA,SAAS,EAAE,KAFb;AAGEC,UAAAA,YAAY,EAAEM,MAAM,CAACE;AAHvB;AAKD;;AACD,SAAKjC,wBAAL;AAA+B;AAC7BmC,QAAAA,OAAO,CAACC,GAAR,CAAYL,MAAM,CAACE,OAAnB;AACA,cAAMI,QAAQ,GAAGP,KAAK,CAACJ,WAAN,CAAkBY,MAAlB,CAAyBP,MAAM,CAACE,OAAhC,CAAjB;AACA,iCACKH,KADL;AAEEJ,UAAAA,WAAW,EAAEW,QAFf;AAGEb,UAAAA,SAAS,EAAE,KAHb;AAIEC,UAAAA,YAAY,EAAE;AAJhB;AAMD;;AACD,SAAKlB,iBAAL;AAAwB;AACtB,iCACKuB,KADL;AAEEN,UAAAA,SAAS,EAAE,IAFb;AAGEC,UAAAA,YAAY,EAAE;AAHhB;AAKD;;AACD,SAAKhB,wBAAL;AAA+B;AAC7B,iCACKqB,KADL;AAEEN,UAAAA,SAAS,EAAE,KAFb;AAGEC,UAAAA,YAAY,EAAEM,MAAM,CAACE;AAHvB;AAKD;;AACD,SAAKzB,yBAAL;AAAgC;AAC9B2B,QAAAA,OAAO,CAACC,GAAR,CAAYL,MAAM,CAACE,OAAnB;AACA,cAAMI,QAAQ,GAAGP,KAAK,CAACH,YAAN,CAAmBW,MAAnB,CAA0BP,MAAM,CAACE,OAAjC,CAAjB;AACA,iCACKH,KADL;AAEEH,UAAAA,YAAY,EAAEU,QAFhB;AAGEb,UAAAA,SAAS,EAAE,KAHb;AAIEC,UAAAA,YAAY,EAAE;AAJhB;AAMD;;AACD,SAAKxB,eAAL;AAAsB;AACpBkC,QAAAA,OAAO,CAACC,GAAR,CAAYL,MAAM,CAACE,OAAnB;AACA,iCACKH,KADL;AAEEN,UAAAA,SAAS,EAAE,IAFb;AAGEC,UAAAA,YAAY,EAAE;AAHhB;AAKD;;AACD,SAAKvB,sBAAL;AAA6B;AAC3BiC,QAAAA,OAAO,CAACC,GAAR,CAAYL,MAAM,CAACE,OAAnB;AACA,iCACKH,KADL;AAEEN,UAAAA,SAAS,EAAE,KAFb;AAGEC,UAAAA,YAAY,EAAEM,MAAM,CAACE;AAHvB;AAKD;;AACD,SAAK9B,uBAAL;AAA8B;AAC5BgC,QAAAA,OAAO,CAACC,GAAR,CAAYL,MAAM,CAACE,OAAnB;AACA,cAAMI,QAAQ,GAAGP,KAAK,CAACJ,WAAN,CAAkBY,MAAlB,CAAyBP,MAAM,CAACE,OAAhC,CAAjB;AACA,iCACKH,KADL;AAEEJ,UAAAA,WAAW,EAAEW,QAFf;AAGEb,UAAAA,SAAS,EAAE,KAHb;AAIEC,UAAAA,YAAY,EAAE;AAJhB;AAMD;;AACD,SAAKf,gBAAL;AAAuB;AACrB,iCACKoB,KADL;AAEEN,UAAAA,SAAS,EAAE,IAFb;AAGEC,UAAAA,YAAY,EAAE;AAHhB;AAKD;;AACD,SAAKd,uBAAL;AAA8B;AAC5BwB,QAAAA,OAAO,CAACC,GAAR,CAAYL,MAAM,CAACE,OAAnB;AACA,iCACKH,KADL;AAEEN,UAAAA,SAAS,EAAE,KAFb;AAGEC,UAAAA,YAAY,EAAEM,MAAM,CAACE;AAHvB;AAKD;;AACD,SAAKrB,wBAAL;AAA+B;AAC7BuB,QAAAA,OAAO,CAACC,GAAR,CAAYL,MAAM,CAACE,OAAnB;AACA,cAAMI,QAAQ,GAAGP,KAAK,CAACH,YAAN,CAAmBW,MAAnB,CAA0BP,MAAM,CAACE,OAAjC,CAAjB;AACA,iCACKH,KADL;AAEEH,UAAAA,YAAY,EAAEU,QAFhB;AAGEb,UAAAA,SAAS,EAAE,KAHb;AAIEC,UAAAA,YAAY,EAAE;AAJhB;AAMD;;AACD,SAAKrB,kBAAL;AAAyB;AACvB+B,QAAAA,OAAO,CAACC,GAAR,CAAYL,MAAM,CAACE,OAAnB;AACA,iCACKH,KADL;AAEEN,UAAAA,SAAS,EAAE,IAFb;AAGEC,UAAAA,YAAY,EAAE;AAHhB;AAKD;;AACD,SAAKpB,yBAAL;AAAgC;AAC9B8B,QAAAA,OAAO,CAACC,GAAR,CAAYL,MAAM,CAACE,OAAnB;AACA,iCACKH,KADL;AAEEN,UAAAA,SAAS,EAAE,KAFb;AAGEC,UAAAA,YAAY,EAAEM,MAAM,CAACE;AAHvB;AAKH;;AACC,SAAK3B,0BAAL;AAAiC;AAC/B6B,QAAAA,OAAO,CAACC,GAAR,CAAYL,MAAM,CAACE,OAAnB;AACA,iCACKH,KADL;AAEEN,UAAAA,SAAS,EAAE,KAFb;AAGEC,UAAAA,YAAY,EAAE;AAHhB;AAKD;;AACD,SAAKT,mBAAL;AAA0B;AACxB,iCACKc,KADL;AAEEN,UAAAA,SAAS,EAAE,IAFb;AAGEC,UAAAA,YAAY,EAAE;AAHhB;AAKD;;AACD,SAAKR,0BAAL;AAAiC;AAC/BkB,QAAAA,OAAO,CAACC,GAAR,CAAYL,MAAM,CAACE,OAAnB;AACA,iCACKH,KADL;AAEEN,UAAAA,SAAS,EAAE,KAFb;AAGEC,UAAAA,YAAY,EAAEM,MAAM,CAACE;AAHvB;AAKH;;AACC,SAAKf,2BAAL;AAAkC;AAChCiB,QAAAA,OAAO,CAACC,GAAR,CAAYL,MAAM,CAACE,OAAnB;AACA,iCACKH,KADL;AAEEN,UAAAA,SAAS,EAAE,KAFb;AAGEC,UAAAA,YAAY,EAAE;AAHhB;AAKD;;AACD,SAAKZ,iBAAL;AAAwB;AACtBsB,QAAAA,OAAO,CAACC,GAAR,CAAYL,MAAM,CAACE,OAAnB;AACA,iCACKH,KADL;AAEEN,UAAAA,SAAS,EAAE,IAFb;AAGEC,UAAAA,YAAY,EAAE;AAHhB;AAKD;;AACD,SAAKX,wBAAL;AAA+B;AAC7BqB,QAAAA,OAAO,CAACC,GAAR,CAAYL,MAAM,CAACE,OAAnB;AACA,iCACKH,KADL;AAEEN,UAAAA,SAAS,EAAE,KAFb;AAGEC,UAAAA,YAAY,EAAEM,MAAM,CAACE;AAHvB;AAKH;;AACC,SAAKlB,yBAAL;AAAgC;AAC9BoB,QAAAA,OAAO,CAACC,GAAR,CAAYL,MAAM,CAACE,OAAnB;AACA,iCACKH,KADL;AAEEN,UAAAA,SAAS,EAAE,KAFb;AAGEC,UAAAA,YAAY,EAAE;AAHhB;AAKH;;AACC;AACE,aAAOK,KAAP;AA3NJ;AA6ND,CA9NM","sourcesContent":["import {\r\n  SIGN_UP,\r\n  SIGN_UP_FAILED,\r\n  SIGN_UP_SUCCESS,\r\n  LOG_IN,\r\n  LOG_IN_FAILED,\r\n  LOG_IN_SUCCESS,\r\n  GET_PUBLIC_JOKES,\r\n  GET_PUBLIC_JOKES_FAILED,\r\n  GET_PUBLIC_JOKES_SUCCESS,\r\n  ADD_PUBLIC_JOKE,\r\n  ADD_PUBLIC_JOKE_FAILED,\r\n  ADD_PUBLIC_JOKE_SUCCESS,\r\n  DELETE_PUBLIC_JOKE,\r\n  DELETE_PUBLIC_JOKE_FAILED,\r\n  DELETE_PUBLIC_JOKE_SUCCESS,\r\n  GET_PRIVATE_JOKES,\r\n  GET_PRIVATE_JOKES_SUCCESS,\r\n  GET_PRIVATE_JOKES_FAILED,\r\n  ADD_PRIVATE_JOKE,\r\n  ADD_PRIVATE_JOKE_FAILED,\r\n  ADD_PRIVATE_JOKE_SUCCESS,\r\n  EDIT_PRIVATE_JOKE,\r\n  EDIT_PRIVATE_JOKE_FAILED,\r\n  EDIT_PRIVATE_JOKE_SUCCESS,\r\n  DELETE_PRIVATE_JOKE,\r\n  DELETE_PRIVATE_JOKE_FAILED,\r\n  DELETE_PRIVATE_JOKE_SUCCESS\r\n} from '../actions/index'\r\nimport jwtDecode from 'jwt-decode'\r\n\r\n\r\nconst initialState = (token => ({\r\n  currentUser: token ? jwtDecode(token) : null,\r\n  isAuthenticating: null,\r\n  isLoading: true,\r\n  errorMessage: null,\r\n  publicJokes: [],\r\n  privateJokes: []\r\n}))(localStorage.token);\r\n\r\nexport const rootReducer = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case SIGN_UP: {\r\n      return {\r\n        ...state,\r\n        isAuthenticating: true,\r\n      }\r\n    }\r\n    case SIGN_UP_FAILED: {\r\n      return {\r\n        ...state,\r\n        errorMessage: action.payload,\r\n        isAuthenticating: false\r\n      }\r\n    }\r\n    case SIGN_UP_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        currentUser: action.user,\r\n        isAuthenticating: false,\r\n        errorMessage: null,\r\n      }\r\n    }\r\n    case LOG_IN: {\r\n      return {\r\n        ...state,\r\n        isAuthenticating: false,\r\n        isLoading: true,\r\n        errorMessage: null\r\n      }\r\n    }\r\n    case LOG_IN_FAILED: {\r\n      return {\r\n        ...state,\r\n        isAuthenticating: false,\r\n        isLoading: false,\r\n        errorMessage: action.payload\r\n      }\r\n    }\r\n    case LOG_IN_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        isAuthenticating: false,\r\n        currentUser: action.user,\r\n        isLoading: false,\r\n        errorMessage: null\r\n      }\r\n    }\r\n    \r\n    case GET_PUBLIC_JOKES: {\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        errorMessage: null\r\n      }\r\n    }\r\n    case GET_PUBLIC_JOKES_FAILED: {\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        errorMessage: action.payload\r\n      }\r\n    }\r\n    case GET_PUBLIC_JOKES_SUCCESS: {\r\n      console.log(action.payload)\r\n      const newJokes = state.publicJokes.concat(action.payload)\r\n      return {\r\n        ...state,\r\n        publicJokes: newJokes,\r\n        isLoading: false,\r\n        errorMessage: null\r\n      }\r\n    }\r\n    case GET_PRIVATE_JOKES: {\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        errorMessage: null\r\n      }\r\n    }\r\n    case GET_PRIVATE_JOKES_FAILED: {\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        errorMessage: action.payload\r\n      }\r\n    }\r\n    case GET_PRIVATE_JOKES_SUCCESS: {\r\n      console.log(action.payload)\r\n      const newJokes = state.privateJokes.concat(action.payload)\r\n      return {\r\n        ...state,\r\n        privateJokes: newJokes,\r\n        isLoading: false,\r\n        errorMessage: null\r\n      }\r\n    }\r\n    case ADD_PUBLIC_JOKE: {\r\n      console.log(action.payload)\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        errorMessage: null,\r\n      }\r\n    }\r\n    case ADD_PUBLIC_JOKE_FAILED: {\r\n      console.log(action.payload)\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        errorMessage: action.payload\r\n      }\r\n    }\r\n    case ADD_PUBLIC_JOKE_SUCCESS: {\r\n      console.log(action.payload)\r\n      const newJokes = state.publicJokes.concat(action.payload)\r\n      return {\r\n        ...state,\r\n        publicJokes: newJokes,\r\n        isLoading: false,\r\n        errorMessage: null\r\n      }\r\n    }\r\n    case ADD_PRIVATE_JOKE: {\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        errorMessage: null,\r\n      }\r\n    }\r\n    case ADD_PRIVATE_JOKE_FAILED: {\r\n      console.log(action.payload)\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        errorMessage: action.payload\r\n      }\r\n    }\r\n    case ADD_PRIVATE_JOKE_SUCCESS: {\r\n      console.log(action.payload)\r\n      const newJokes = state.privateJokes.concat(action.payload)\r\n      return {\r\n        ...state,\r\n        privateJokes: newJokes,\r\n        isLoading: false,\r\n        errorMessage: null\r\n      }\r\n    }\r\n    case DELETE_PUBLIC_JOKE: {\r\n      console.log(action.payload)\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        errorMessage: null,\r\n      }\r\n    }\r\n    case DELETE_PUBLIC_JOKE_FAILED: {\r\n      console.log(action.payload)\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        errorMessage: action.payload\r\n    }\r\n  }\r\n    case DELETE_PUBLIC_JOKE_SUCCESS: {\r\n      console.log(action.payload)\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        errorMessage: null\r\n      }\r\n    }\r\n    case DELETE_PRIVATE_JOKE: {\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        errorMessage: null,\r\n      }\r\n    }\r\n    case DELETE_PRIVATE_JOKE_FAILED: {\r\n      console.log(action.payload)\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        errorMessage: action.payload\r\n    }\r\n  }\r\n    case DELETE_PRIVATE_JOKE_SUCCESS: {\r\n      console.log(action.payload)\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        errorMessage: null\r\n      }\r\n    }\r\n    case EDIT_PRIVATE_JOKE: {\r\n      console.log(action.payload)\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        errorMessage: null,\r\n      }\r\n    }\r\n    case EDIT_PRIVATE_JOKE_FAILED: {\r\n      console.log(action.payload)\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        errorMessage: action.payload\r\n    }\r\n  }\r\n    case EDIT_PRIVATE_JOKE_SUCCESS: {\r\n      console.log(action.payload)\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        errorMessage: null\r\n    }\r\n  }\r\n    default:\r\n      return state\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}
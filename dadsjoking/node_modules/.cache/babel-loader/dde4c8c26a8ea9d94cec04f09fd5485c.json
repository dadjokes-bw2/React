{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bryan\\\\Documents\\\\GitHub\\\\React\\\\dadsjoking\\\\src\\\\views\\\\PrivateJokes.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { getPrivateJokes, editPrivateJoke, deletePrivateJoke, addPrivateJoke } from '../actions/index';\nimport { withRouter, Link } from 'react-router-dom';\nimport { Card, CardBody, CardText, Button } from 'reactstrap';\nimport NavBar from '../components/NavBar';\n\nfunction PrivateJokes(props) {\n  const isLoading = props.isLoading,\n        errorMessage = props.errorMessage,\n        privateJokes = props.privateJokes;\n\n  if (isLoading) {\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, \"Loading Jokes...\");\n  }\n\n  return React.createElement(\"section\", {\n    className: \"private-jokes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(NavBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Private Jokes\"), privateJokes.map(joke => {\n    const location = {\n      pathname: \"editJoke/\".concat(joke.id),\n      state: {\n        joke: joke.joke\n      }\n    };\n    return React.createElement(Card, {\n      key: joke.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(CardText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, joke.joke), React.createElement(Button, {\n      outline: true,\n      color: \"primary\",\n      onClick: () => {\n        props.deletePrivateJoke(joke.id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"\\u2716\"), React.createElement(Link, {\n      to: location,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Button, {\n      outline: true,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"\\u270F\"))));\n  }), React.createElement(Link, {\n    to: \"/addPrivateJoke\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Button, {\n    outline: true,\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Add joke!\")));\n}\n\nconst mapStateToProps = state => {\n  return {\n    isLoading: state.isLoading,\n    errorMessage: state.errorMessage,\n    privateJokes: state.privateJokes\n  };\n};\n\nconst mapDispatchToProps = {\n  addPrivateJoke,\n  getPrivateJokes,\n  editPrivateJoke,\n  deletePrivateJoke\n};\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(PrivateJokes));","map":{"version":3,"sources":["C:\\Users\\bryan\\Documents\\GitHub\\React\\dadsjoking\\src\\views\\PrivateJokes.js"],"names":["React","connect","getPrivateJokes","editPrivateJoke","deletePrivateJoke","addPrivateJoke","withRouter","Link","Card","CardBody","CardText","Button","NavBar","PrivateJokes","props","isLoading","errorMessage","privateJokes","map","joke","location","pathname","id","state","mapStateToProps","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,eAAR,EAAyBC,eAAzB,EAA0CC,iBAA1C,EAA6DC,cAA7D,QAAkF,kBAAlF;AACA,SAAQC,UAAR,EAAoBC,IAApB,QAA+B,kBAA/B;AACA,SACIC,IADJ,EACUC,QADV,EACoBC,QADpB,EAC8BC,MAD9B,QAEO,YAFP;AAGA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA,QAClBC,SADkB,GACuBD,KADvB,CAClBC,SADkB;AAAA,QACPC,YADO,GACuBF,KADvB,CACPE,YADO;AAAA,QACOC,YADP,GACuBH,KADvB,CACOG,YADP;;AAGzB,MAAIF,SAAJ,EAAe;AACX,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAP;AACH;;AAEG,SACI;AAAS,IAAA,SAAS,EAAG,eAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFJ,EAGKE,YAAY,CAACC,GAAb,CAAkBC,IAAD,IAAU;AACxB,UAAMC,QAAQ,GAAG;AACbC,MAAAA,QAAQ,qBAAcF,IAAI,CAACG,EAAnB,CADK;AAEbC,MAAAA,KAAK,EAAE;AACHJ,QAAAA,IAAI,EAAEA,IAAI,CAACA;AADR;AAFM,KAAjB;AAMA,WACI,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAIA,IAAI,CAACG,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAWH,IAAI,CAACA,IAAhB,CADJ,EAEI,oBAAC,MAAD;AAAQ,MAAA,OAAO,MAAf;AAAgB,MAAA,KAAK,EAAG,SAAxB;AAAkC,MAAA,OAAO,EAAI,MAAM;AAACL,QAAAA,KAAK,CAACV,iBAAN,CAAwBe,IAAI,CAACG,EAA7B;AAAiC,OAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAGI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAIF,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsB,oBAAC,MAAD;AAAQ,MAAA,OAAO,MAAf;AAAgB,MAAA,KAAK,EAAG,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAtB,CAHJ,CADJ,CADJ;AAUH,GAjBA,CAHL,EAqBI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAG,iBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6B,oBAAC,MAAD;AAAQ,IAAA,OAAO,MAAf;AAAgB,IAAA,KAAK,EAAG,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAA7B,CArBJ,CADJ;AA0BP;;AAED,MAAMI,eAAe,GAAGD,KAAK,IAAI;AAC7B,SAAO;AACHR,IAAAA,SAAS,EAAEQ,KAAK,CAACR,SADd;AAEHC,IAAAA,YAAY,EAAEO,KAAK,CAACP,YAFjB;AAGHC,IAAAA,YAAY,EAAEM,KAAK,CAACN;AAHjB,GAAP;AAKH,CAND;;AAQA,MAAMQ,kBAAkB,GAAG;AACvBpB,EAAAA,cADuB;AAEvBH,EAAAA,eAFuB;AAGvBC,EAAAA,eAHuB;AAIvBC,EAAAA;AAJuB,CAA3B;AAOA,eAAeE,UAAU,CACrBL,OAAO,CACHuB,eADG,EAEHC,kBAFG,CAAP,CAGEZ,YAHF,CADqB,CAAzB","sourcesContent":["import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {getPrivateJokes, editPrivateJoke, deletePrivateJoke, addPrivateJoke} from '../actions/index'\r\nimport {withRouter, Link} from 'react-router-dom'\r\nimport {\r\n    Card, CardBody, CardText, Button,\r\n} from 'reactstrap'\r\nimport NavBar from '../components/NavBar'\r\n\r\nfunction PrivateJokes(props) {\r\n    const {isLoading, errorMessage, privateJokes} = props\r\n\r\n    if (isLoading) {\r\n        return <p>Loading Jokes...</p>\r\n    }\r\n    \r\n        return (\r\n            <section className = 'private-jokes'>\r\n                <NavBar />\r\n                <h2>Private Jokes</h2>\r\n                {privateJokes.map((joke) => {\r\n                    const location = {\r\n                        pathname: `editJoke/${joke.id}`,\r\n                        state: {\r\n                            joke: joke.joke\r\n                        }\r\n                    }\r\n                    return (\r\n                        <Card key = {joke.id}>\r\n                            <CardBody>\r\n                                <CardText>{joke.joke}</CardText>\r\n                                <Button outline color = 'primary' onClick = {() => {props.deletePrivateJoke(joke.id)}}>✖</Button>\r\n                                <Link to = {location}><Button outline color = 'primary'>✏</Button></Link>\r\n                            </CardBody>\r\n                            \r\n                        </Card>\r\n                    )\r\n                })}\r\n                <Link to = '/addPrivateJoke'><Button outline color = 'secondary'>Add joke!</Button></Link>\r\n            </section>\r\n        )\r\n    \r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoading: state.isLoading,\r\n        errorMessage: state.errorMessage,\r\n        privateJokes: state.privateJokes\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    addPrivateJoke,\r\n    getPrivateJokes,\r\n    editPrivateJoke,\r\n    deletePrivateJoke\r\n}\r\n\r\nexport default withRouter(\r\n    connect(\r\n        mapStateToProps,\r\n        mapDispatchToProps\r\n    )(PrivateJokes))"]},"metadata":{},"sourceType":"module"}